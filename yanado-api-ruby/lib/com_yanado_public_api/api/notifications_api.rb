=begin
#Yanado REST API

#REST API for Yanado

OpenAPI spec version: 1.0
Contact: prle@yanado.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module ComYanadoPublicApi
  class NotificationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get notifications
    # 
    # @param type Notification type
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :any_user Any user (default to false)
    # @option opts [String] :list_id List id
    # @return [Array<Notification>]
    def get_notifications(type, opts = {})
      data, _status_code, _headers = get_notifications_with_http_info(type, opts)
      return data
    end

    # Get notifications
    # 
    # @param type Notification type
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :any_user Any user
    # @option opts [String] :list_id List id
    # @return [Array<(Array<Notification>, Fixnum, Hash)>] Array<Notification> data, response status code and response headers
    def get_notifications_with_http_info(type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: NotificationsApi.get_notifications ..."
      end
      # verify the required parameter 'type' is set
      if @api_client.config.client_side_validation && type.nil?
        fail ArgumentError, "Missing the required parameter 'type' when calling NotificationsApi.get_notifications"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['ASSIGNEE', 'STATE', 'PRIORITY', 'DUEDATE', 'REMINDER', 'DETAILS'].include?(type)
        fail ArgumentError, "invalid value for 'type', must be one of ASSIGNEE, STATE, PRIORITY, DUEDATE, REMINDER, DETAILS"
      end
      # resource path
      local_var_path = "/public-api/notifications/{type}".sub('{' + 'type' + '}', type.to_s)

      # query parameters
      query_params = {}
      query_params[:'anyUser'] = opts[:'any_user'] if !opts[:'any_user'].nil?
      query_params[:'listId'] = opts[:'list_id'] if !opts[:'list_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['X-API-Key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Notification>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificationsApi#get_notifications\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
